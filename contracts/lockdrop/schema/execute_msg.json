{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "receive"
      ],
      "properties": {
        "receive": {
          "$ref": "#/definitions/Cw20ReceiveMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "required": [
            "new_config"
          ],
          "properties": {
            "new_config": {
              "$ref": "#/definitions/UpdateConfigMsg"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "enable_claims"
      ],
      "properties": {
        "enable_claims": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "initialize_pool"
      ],
      "properties": {
        "initialize_pool": {
          "type": "object",
          "required": [
            "terraswap_pool"
          ],
          "properties": {
            "incentives_percent": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal256"
                },
                {
                  "type": "null"
                }
              ]
            },
            "terraswap_pool": {
              "$ref": "#/definitions/LiquidityPool"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_pool"
      ],
      "properties": {
        "update_pool": {
          "type": "object",
          "required": [
            "pool_identifier",
            "update_pool_config"
          ],
          "properties": {
            "pool_identifier": {
              "type": "string"
            },
            "update_pool_config": {
              "$ref": "#/definitions/Decimal256"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "transfer_returned_astro"
      ],
      "properties": {
        "transfer_returned_astro": {
          "type": "object",
          "required": [
            "amount",
            "recepient"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint256"
            },
            "recepient": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "withdraw_from_lockup"
      ],
      "properties": {
        "withdraw_from_lockup": {
          "type": "object",
          "required": [
            "amount",
            "duration",
            "pool_identifer"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint256"
            },
            "duration": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "pool_identifer": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "migrate_liquidity"
      ],
      "properties": {
        "migrate_liquidity": {
          "type": "object",
          "required": [
            "astroport_lp_address",
            "astroport_pool_address",
            "pool_identifer"
          ],
          "properties": {
            "astroport_lp_address": {
              "type": "string"
            },
            "astroport_pool_address": {
              "type": "string"
            },
            "pool_identifer": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "stake_lp_tokens"
      ],
      "properties": {
        "stake_lp_tokens": {
          "type": "object",
          "required": [
            "pool_identifer"
          ],
          "properties": {
            "pool_identifer": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "delegate_astro_to_auction"
      ],
      "properties": {
        "delegate_astro_to_auction": {
          "type": "object",
          "required": [
            "amount"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint256"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "claim_rewards_for_lockup"
      ],
      "properties": {
        "claim_rewards_for_lockup": {
          "type": "object",
          "required": [
            "duration",
            "pool_identifer"
          ],
          "properties": {
            "duration": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "pool_identifer": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "unlock_position"
      ],
      "properties": {
        "unlock_position": {
          "type": "object",
          "required": [
            "duration",
            "pool_identifer"
          ],
          "properties": {
            "duration": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "pool_identifer": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "force_unlock_position"
      ],
      "properties": {
        "force_unlock_position": {
          "type": "object",
          "required": [
            "duration",
            "pool_identifer"
          ],
          "properties": {
            "duration": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "pool_identifer": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Callbacks; only callable by the contract itself.",
      "type": "object",
      "required": [
        "callback"
      ],
      "properties": {
        "callback": {
          "$ref": "#/definitions/CallbackMsg"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Addr": {
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    },
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "CallbackMsg": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "update_pool_on_dual_rewards_claim"
          ],
          "properties": {
            "update_pool_on_dual_rewards_claim": {
              "type": "object",
              "required": [
                "pool_identifer",
                "prev_astro_balance",
                "prev_dual_reward_balance"
              ],
              "properties": {
                "pool_identifer": {
                  "type": "string"
                },
                "prev_astro_balance": {
                  "$ref": "#/definitions/Uint256"
                },
                "prev_dual_reward_balance": {
                  "$ref": "#/definitions/Uint256"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "withdraw_user_lockup_rewards_callback"
          ],
          "properties": {
            "withdraw_user_lockup_rewards_callback": {
              "type": "object",
              "required": [
                "duration",
                "force_unlock",
                "pool_identifer",
                "user_address",
                "withdraw_lp_stake"
              ],
              "properties": {
                "duration": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "force_unlock": {
                  "type": "boolean"
                },
                "pool_identifer": {
                  "type": "string"
                },
                "user_address": {
                  "$ref": "#/definitions/Addr"
                },
                "withdraw_lp_stake": {
                  "type": "boolean"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "withdraw_liquidity_from_terraswap_callback"
          ],
          "properties": {
            "withdraw_liquidity_from_terraswap_callback": {
              "type": "object",
              "required": [
                "astroport_pool",
                "cw20_asset",
                "cw20_asset_balance",
                "native_asset",
                "native_asset_balance",
                "pool_identifer"
              ],
              "properties": {
                "astroport_pool": {
                  "$ref": "#/definitions/LiquidityPool"
                },
                "cw20_asset": {
                  "$ref": "#/definitions/Cw20Asset"
                },
                "cw20_asset_balance": {
                  "$ref": "#/definitions/Uint128"
                },
                "native_asset": {
                  "$ref": "#/definitions/NativeAsset"
                },
                "native_asset_balance": {
                  "$ref": "#/definitions/Uint128"
                },
                "pool_identifer": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "update_state_liquidity_migration_callback"
          ],
          "properties": {
            "update_state_liquidity_migration_callback": {
              "type": "object",
              "required": [
                "astroport_lp_balance",
                "astroport_pool",
                "pool_identifer"
              ],
              "properties": {
                "astroport_lp_balance": {
                  "$ref": "#/definitions/Uint128"
                },
                "astroport_pool": {
                  "$ref": "#/definitions/LiquidityPool"
                },
                "pool_identifer": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Cw20Asset": {
      "type": "object",
      "required": [
        "contract_addr"
      ],
      "properties": {
        "contract_addr": {
          "type": "string"
        }
      }
    },
    "Cw20ReceiveMsg": {
      "description": "Cw20ReceiveMsg should be de/serialized under `Receive()` variant in a ExecuteMsg",
      "type": "object",
      "required": [
        "amount",
        "msg",
        "sender"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "msg": {
          "$ref": "#/definitions/Binary"
        },
        "sender": {
          "type": "string"
        }
      }
    },
    "Decimal256": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0 The greatest possible value that can be represented is 115792089237316195423570985008687907853269984665640564039457.584007913129639935 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "LiquidityPool": {
      "type": "object",
      "required": [
        "amount",
        "lp_token_addr",
        "pair_addr"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint256"
        },
        "lp_token_addr": {
          "$ref": "#/definitions/Addr"
        },
        "pair_addr": {
          "$ref": "#/definitions/Addr"
        }
      }
    },
    "NativeAsset": {
      "type": "object",
      "required": [
        "denom"
      ],
      "properties": {
        "denom": {
          "type": "string"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "Uint256": {
      "type": "string"
    },
    "UpdateConfigMsg": {
      "type": "object",
      "properties": {
        "astro_token_address": {
          "description": "Astroport token address",
          "type": [
            "string",
            "null"
          ]
        },
        "auction_contract_address": {
          "description": "Bootstrap Auction contract address",
          "type": [
            "string",
            "null"
          ]
        },
        "generator_address": {
          "description": "Generator (Staking for dual rewards) contract address",
          "type": [
            "string",
            "null"
          ]
        },
        "lockdrop_incentives": {
          "description": "Total MARS lockdrop incentives to be distributed among the users",
          "anyOf": [
            {
              "$ref": "#/definitions/Uint256"
            },
            {
              "type": "null"
            }
          ]
        },
        "owner": {
          "description": "Account who can update config",
          "type": [
            "string",
            "null"
          ]
        }
      }
    }
  }
}
